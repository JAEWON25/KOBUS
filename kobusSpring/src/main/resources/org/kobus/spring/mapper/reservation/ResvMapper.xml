<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.kobus.spring.mapper.reservation.ResvMapper">

	<!-- List<ResvDTO> searchResvList(@Param("loginId") String loginId) throws SQLException; -->
	<select id="searchResvList" parameterType="string"
		resultType="org.kobus.spring.domain.reservation.ResvDTO">
	    <![CDATA[
	    SELECT
	        R.resID,
	        COUNT(S.seatNO) AS totalCount,
	        LISTAGG(S.seatNO, ',') WITHIN GROUP (ORDER BY S.seatNO) AS seatNO,
	        COUNT(CASE WHEN RS.seatType = 'ADULT' THEN 1 END) AS aduCount,
	        COUNT(CASE WHEN RS.seatType = 'STUDENT' THEN 1 END) AS stuCount,
	        COUNT(CASE WHEN RS.seatType = 'CHILD' THEN 1 END) AS chdCount,
	        R.rideDate,
	        R.resvDate,
	        R.resvStatus,
	        R.resvType,
	        R.qrCode,
	        RGD.regId AS deprRegCode,
	        RGD.regName AS deprRegName,
	        RGA.regId AS arrRegCode,
	        RGA.regName AS arrRegName,
	        C.comName,
	        B.busGrade,
	        BS.durMin,
	        PC.amount,
	        PC.PAY_METHOD
	    FROM reservation R
	    JOIN ReservedSeats RS ON R.resID = RS.resID
	    JOIN seat S ON RS.seatID = S.seatID
	    LEFT JOIN busSchedule BS ON R.bshID = BS.bshID
	    LEFT JOIN kobusUser KU ON R.kusID = KU.kusID
	    LEFT JOIN bus B ON BS.busID = B.busID
	    LEFT JOIN company C ON B.comID = C.comID
	    LEFT JOIN route RT ON BS.rouID = RT.rouID
	    LEFT JOIN departure D ON RT.depID = D.depID
	    LEFT JOIN arrival A ON RT.arrID = A.arrID
	    LEFT JOIN region RGD ON D.regID = RGD.regID
	    LEFT JOIN region RGA ON A.regID = RGA.regID
	    JOIN RESERVATION_PAYMENT PM ON R.resID = PM.RESID
	    JOIN PAYMENT_COMMON PC ON PC.PAYMENT_ID = PM.PAYMENT_ID
	    WHERE KU.id = #{loginId}
	      AND R.resvStatus = '결제완료'
	    GROUP BY
	        R.resID, R.rideDate, R.resvDate, R.resvStatus, R.resvType, R.qrCode,
	        RGD.regId, RGD.regName, RGA.regId, RGA.regName,
	        C.comName, B.busGrade, BS.durMin, PC.amount, PC.PAY_METHOD
	    ORDER BY R.resvDate DESC
	    ]]>
	</select>

	<!-- int cancelResvList(@Param("mrsMrnpNo") String mrsMrnpNo) throws SQLException; -->
	<update id="cancelResvList">
	UPDATE RESERVATION SET RESVSTATUS = '예약취소', SEATABLE = 'N' 
	WHERE RESID = #{mrsMrnpNo} AND RESVSTATUS = '결제완료' AND SEATABLE = 'Y'
	</update>

	<!-- List<ResvDTO> searchCancelResvList(@Param("loginId") String loginId) throws SQLException; -->
	<select id="searchCancelResvList" parameterType="string" resultType="org.kobus.spring.domain.reservation.ResvDTO">
        <![CDATA[
        SELECT
            R.resID,
            COUNT(S.seatNO) AS totalCount,
            LISTAGG(S.seatNO, ',') WITHIN GROUP (ORDER BY S.seatNO) AS seatNO,
            COUNT(CASE WHEN RS.seatType = 'ADULT' THEN 1 END) AS aduCount,
            COUNT(CASE WHEN RS.seatType = 'STUDENT' THEN 1 END) AS stuCount,
            COUNT(CASE WHEN RS.seatType = 'CHILD' THEN 1 END) AS chdCount,
            R.rideDate,
            R.resvDate,
            R.resvStatus,
            R.resvType,
            R.qrCode,
            RGD.regId AS deprRegCode,
            RGD.regName AS deprRegName,
            RGA.regId AS arrRegCode,
            RGA.regName AS arrRegName,
            C.comName,
            B.busGrade,
            BS.durMin,
            PC.amount,
            PC.PAY_METHOD
        FROM reservation R
        FULL OUTER JOIN ReservedSeats RS ON R.resID = RS.resID
        FULL OUTER JOIN seat S ON RS.seatID = S.seatID
        FULL OUTER JOIN busSchedule BS ON R.bshID = BS.bshID
        FULL OUTER JOIN kobusUser KU ON R.kusID = KU.kusID
        FULL OUTER JOIN bus B ON BS.busID = B.busID
        FULL OUTER JOIN company C ON B.comID = C.comID
        FULL OUTER JOIN route RT ON BS.rouID = RT.rouID
        FULL OUTER JOIN departure D ON RT.depID = D.depID
        FULL OUTER JOIN arrival A ON RT.arrID = A.arrID
        FULL OUTER JOIN region RGD ON D.regID = RGD.regID
        FULL OUTER JOIN region RGA ON A.regID = RGA.regID
        JOIN RESERVATION_PAYMENT PM ON R.resID = PM.RESID
	    JOIN PAYMENT_COMMON PC ON PC.PAYMENT_ID = PM.PAYMENT_ID
        WHERE KU.id = #{loginId}
          AND R.resvStatus = '예약취소'
        GROUP BY
            R.resID, R.rideDate, R.resvDate, R.resvStatus, R.resvType, R.qrCode,
            RGD.regId, RGD.regName, RGA.regId, RGA.regName,
            C.comName, B.busGrade, BS.durMin, PC.amount, PC.PAY_METHOD
        ORDER BY R.resvDate DESC
        ]]>
    </select>

	<!-- int changeRemainSeats(@Param("mrsMrnpNo") String mrsMrnpNo, @Param("rideTime") String rideTime) throws SQLException; -->
	<update id="updateRemainSeats">
	    UPDATE BUSSCHEDULE B
	    SET REMAINSEATS = (
	        SELECT COUNT(*)
	        FROM SEAT S
	        WHERE S.BUSID = B.BUSID
	          AND S.SEATABLE = 'Y'
	    )
	    WHERE B.BSHID = (
	        SELECT R.BSHID
	        FROM RESERVATION R
	        WHERE R.RESID = #{mrsMrnpNo}
	          AND R.RIDEDATE = TO_TIMESTAMP(#{rideTime}, 'YYYY-MM-DD HH24:MI:SS')
	    )
	</update>
	

</mapper>
